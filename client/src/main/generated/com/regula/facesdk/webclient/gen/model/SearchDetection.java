/*
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 6.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.regula.facesdk.webclient.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * The array of identified persons.
 */
@ApiModel(description = "The array of identified persons.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SearchDetection {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private Integer code;

  public static final String SERIALIZED_NAME_CROP = "crop";
  @SerializedName(SERIALIZED_NAME_CROP)
  private String crop;

  public static final String SERIALIZED_NAME_DETECTOR_TYPE = "detectorType";
  @SerializedName(SERIALIZED_NAME_DETECTOR_TYPE)
  private Integer detectorType;

  public static final String SERIALIZED_NAME_HASH = "hash";
  @SerializedName(SERIALIZED_NAME_HASH)
  private String hash;

  public static final String SERIALIZED_NAME_IDX = "idx";
  @SerializedName(SERIALIZED_NAME_IDX)
  private Integer idx;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_LANDMARKS = "landmarks";
  @SerializedName(SERIALIZED_NAME_LANDMARKS)
  private List<List<Integer>> landmarks = null;

  public static final String SERIALIZED_NAME_LANDMARKS_TYPE = "landmarksType";
  @SerializedName(SERIALIZED_NAME_LANDMARKS_TYPE)
  private Integer landmarksType;

  public static final String SERIALIZED_NAME_MSG = "msg";
  @SerializedName(SERIALIZED_NAME_MSG)
  private String msg;

  public static final String SERIALIZED_NAME_ROI = "roi";
  @SerializedName(SERIALIZED_NAME_ROI)
  private List<BigDecimal> roi = null;

  public static final String SERIALIZED_NAME_VERSION_S_D_K = "versionSDK";
  @SerializedName(SERIALIZED_NAME_VERSION_S_D_K)
  private String versionSDK;

  public SearchDetection() { 
  }

  public SearchDetection code(Integer code) {
    
    this.code = code;
    return this;
  }

   /**
   * Internal.
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Internal.")

  public Integer getCode() {
    return code;
  }


  public void setCode(Integer code) {
    this.code = code;
  }


  public SearchDetection crop(String crop) {
    
    this.crop = crop;
    return this;
  }

   /**
   * Base64 of the aligned and cropped portrait.
   * @return crop
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base64 of the aligned and cropped portrait.")

  public String getCrop() {
    return crop;
  }


  public void setCrop(String crop) {
    this.crop = crop;
  }


  public SearchDetection detectorType(Integer detectorType) {
    
    this.detectorType = detectorType;
    return this;
  }

   /**
   * Internal.
   * @return detectorType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Internal.")

  public Integer getDetectorType() {
    return detectorType;
  }


  public void setDetectorType(Integer detectorType) {
    this.detectorType = detectorType;
  }


  public SearchDetection hash(String hash) {
    
    this.hash = hash;
    return this;
  }

   /**
   * Internal.
   * @return hash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Internal.")

  public String getHash() {
    return hash;
  }


  public void setHash(String hash) {
    this.hash = hash;
  }


  public SearchDetection idx(Integer idx) {
    
    this.idx = idx;
    return this;
  }

   /**
   * Internal.
   * @return idx
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Internal.")

  public Integer getIdx() {
    return idx;
  }


  public void setIdx(Integer idx) {
    this.idx = idx;
  }


  public SearchDetection image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Internal.
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Internal.")

  public String getImage() {
    return image;
  }


  public void setImage(String image) {
    this.image = image;
  }


  public SearchDetection landmarks(List<List<Integer>> landmarks) {
    
    this.landmarks = landmarks;
    return this;
  }

  public SearchDetection addLandmarksItem(List<Integer> landmarksItem) {
    if (this.landmarks == null) {
      this.landmarks = new ArrayList<List<Integer>>();
    }
    this.landmarks.add(landmarksItem);
    return this;
  }

   /**
   * Absolute coordinates (x,y) of five points of each detected face: left eye, right eye, nose, left point of lips, right point of lips.
   * @return landmarks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[[\"x\",\"y\"]]", value = "Absolute coordinates (x,y) of five points of each detected face: left eye, right eye, nose, left point of lips, right point of lips.")

  public List<List<Integer>> getLandmarks() {
    return landmarks;
  }


  public void setLandmarks(List<List<Integer>> landmarks) {
    this.landmarks = landmarks;
  }


  public SearchDetection landmarksType(Integer landmarksType) {
    
    this.landmarksType = landmarksType;
    return this;
  }

   /**
   * Internal.
   * @return landmarksType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Internal.")

  public Integer getLandmarksType() {
    return landmarksType;
  }


  public void setLandmarksType(Integer landmarksType) {
    this.landmarksType = landmarksType;
  }


  public SearchDetection msg(String msg) {
    
    this.msg = msg;
    return this;
  }

   /**
   * Internal.
   * @return msg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Internal.")

  public String getMsg() {
    return msg;
  }


  public void setMsg(String msg) {
    this.msg = msg;
  }


  public SearchDetection roi(List<BigDecimal> roi) {
    
    this.roi = roi;
    return this;
  }

  public SearchDetection addRoiItem(BigDecimal roiItem) {
    if (this.roi == null) {
      this.roi = new ArrayList<BigDecimal>();
    }
    this.roi.add(roiItem);
    return this;
  }

   /**
   * The rectangular area of a detected face that is represented by a set of four elements: the X and Y coordinates of the top-left point, and the width and height dimensions of the rectangle.
   * @return roi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"x\",\"y\",\"width\",\"height\"]", value = "The rectangular area of a detected face that is represented by a set of four elements: the X and Y coordinates of the top-left point, and the width and height dimensions of the rectangle.")

  public List<BigDecimal> getRoi() {
    return roi;
  }


  public void setRoi(List<BigDecimal> roi) {
    this.roi = roi;
  }


  public SearchDetection versionSDK(String versionSDK) {
    
    this.versionSDK = versionSDK;
    return this;
  }

   /**
   * Get versionSDK
   * @return versionSDK
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5.2.245.687", value = "")

  public String getVersionSDK() {
    return versionSDK;
  }


  public void setVersionSDK(String versionSDK) {
    this.versionSDK = versionSDK;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchDetection searchDetection = (SearchDetection) o;
    return Objects.equals(this.code, searchDetection.code) &&
        Objects.equals(this.crop, searchDetection.crop) &&
        Objects.equals(this.detectorType, searchDetection.detectorType) &&
        Objects.equals(this.hash, searchDetection.hash) &&
        Objects.equals(this.idx, searchDetection.idx) &&
        Objects.equals(this.image, searchDetection.image) &&
        Objects.equals(this.landmarks, searchDetection.landmarks) &&
        Objects.equals(this.landmarksType, searchDetection.landmarksType) &&
        Objects.equals(this.msg, searchDetection.msg) &&
        Objects.equals(this.roi, searchDetection.roi) &&
        Objects.equals(this.versionSDK, searchDetection.versionSDK);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, crop, detectorType, hash, idx, image, landmarks, landmarksType, msg, roi, versionSDK);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchDetection {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    crop: ").append(toIndentedString(crop)).append("\n");
    sb.append("    detectorType: ").append(toIndentedString(detectorType)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    idx: ").append(toIndentedString(idx)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    landmarks: ").append(toIndentedString(landmarks)).append("\n");
    sb.append("    landmarksType: ").append(toIndentedString(landmarksType)).append("\n");
    sb.append("    msg: ").append(toIndentedString(msg)).append("\n");
    sb.append("    roi: ").append(toIndentedString(roi)).append("\n");
    sb.append("    versionSDK: ").append(toIndentedString(versionSDK)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

