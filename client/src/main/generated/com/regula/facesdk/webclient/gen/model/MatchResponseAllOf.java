/*
 * Regula Face SDK Web API
 * <a href=\"https://regulaforensics.com/products/face-recognition-sdk/  \" target=\"_blank\">Regula Face SDK</a> is a cross-platform biometric verification solution for a digital identity verification process. The SDK enables convenient and reliable face capture on the client side (mobile, web, and desktop) and further processing on the client or server side.  The Face SDK includes the following features:  * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-detection\" target=\"_blank\">Face Detection</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-comparison-11\" target=\"_blank\">Face Match (1:1)</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-identification-1n\" target=\"_blank\">Face Search (1:N)</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#liveness-assessment\" target=\"_blank\">Liveness Assessment</a>  Here is the <a href=\"https://github.com/regulaforensics/FaceSDK-web-openapi  \" target=\"_blank\">OpenAPI specification on GitHub</a>.   ### Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 6.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.regula.facesdk.webclient.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.regula.facesdk.webclient.gen.model.MatchImageDetection;
import com.regula.facesdk.webclient.gen.model.MatchImageResult;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * MatchResponseAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MatchResponseAllOf {
  public static final String SERIALIZED_NAME_DETECTIONS = "detections";
  @SerializedName(SERIALIZED_NAME_DETECTIONS)
  private List<MatchImageDetection> detections = null;

  public static final String SERIALIZED_NAME_RESULTS = "results";
  @SerializedName(SERIALIZED_NAME_RESULTS)
  private List<MatchImageResult> results = null;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, Object> metadata = null;

  public MatchResponseAllOf() { 
  }

  public MatchResponseAllOf detections(List<MatchImageDetection> detections) {
    
    this.detections = detections;
    return this;
  }

  public MatchResponseAllOf addDetectionsItem(MatchImageDetection detectionsItem) {
    if (this.detections == null) {
      this.detections = new ArrayList<MatchImageDetection>();
    }
    this.detections.add(detectionsItem);
    return this;
  }

   /**
   * The detection results.
   * @return detections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The detection results.")

  public List<MatchImageDetection> getDetections() {
    return detections;
  }


  public void setDetections(List<MatchImageDetection> detections) {
    this.detections = detections;
  }


  public MatchResponseAllOf results(List<MatchImageResult> results) {
    
    this.results = results;
    return this;
  }

  public MatchResponseAllOf addResultsItem(MatchImageResult resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<MatchImageResult>();
    }
    this.results.add(resultsItem);
    return this;
  }

   /**
   * The comparison results.
   * @return results
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The comparison results.")

  public List<MatchImageResult> getResults() {
    return results;
  }


  public void setResults(List<MatchImageResult> results) {
    this.results = results;
  }


  public MatchResponseAllOf metadata(Map<String, Object> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public MatchResponseAllOf putMetadataItem(String key, Object metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, Object>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * A free-form object containing person&#39;s extended attributes.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A free-form object containing person's extended attributes.")

  public Map<String, Object> getMetadata() {
    return metadata;
  }


  public void setMetadata(Map<String, Object> metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchResponseAllOf matchResponseAllOf = (MatchResponseAllOf) o;
    return Objects.equals(this.detections, matchResponseAllOf.detections) &&
        Objects.equals(this.results, matchResponseAllOf.results) &&
        Objects.equals(this.metadata, matchResponseAllOf.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detections, results, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchResponseAllOf {\n");
    sb.append("    detections: ").append(toIndentedString(detections)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

