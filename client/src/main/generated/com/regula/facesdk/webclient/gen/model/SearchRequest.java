/*
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 5.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.regula.facesdk.webclient.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.regula.facesdk.webclient.gen.model.ImageFields;
import com.regula.facesdk.webclient.gen.model.ImageFieldsImage;
import com.regula.facesdk.webclient.gen.model.OutputImageParams;
import com.regula.facesdk.webclient.gen.model.SearchParameters;
import com.regula.facesdk.webclient.gen.model.SearchParametersCreatePerson;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * SearchRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SearchRequest {
  public static final String SERIALIZED_NAME_CREATE_PERSON = "createPerson";
  @SerializedName(SERIALIZED_NAME_CREATE_PERSON)
  private SearchParametersCreatePerson createPerson;

  public static final String SERIALIZED_NAME_GROUP_IDS = "groupIds";
  @SerializedName(SERIALIZED_NAME_GROUP_IDS)
  private List<UUID> groupIds = null;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private String tag;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private ImageFieldsImage image;

  public static final String SERIALIZED_NAME_OUTPUT_IMAGE_PARAMS = "outputImageParams";
  @SerializedName(SERIALIZED_NAME_OUTPUT_IMAGE_PARAMS)
  private OutputImageParams outputImageParams;

  public static final String SERIALIZED_NAME_DETECT_ALL = "detectAll";
  @SerializedName(SERIALIZED_NAME_DETECT_ALL)
  private Boolean detectAll = false;

  public static final String SERIALIZED_NAME_THRESHOLD = "threshold";
  @SerializedName(SERIALIZED_NAME_THRESHOLD)
  private Float threshold = null;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private Integer limit;

  public SearchRequest() { 
  }

  public SearchRequest createPerson(SearchParametersCreatePerson createPerson) {
    
    this.createPerson = createPerson;
    return this;
  }

   /**
   * Get createPerson
   * @return createPerson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SearchParametersCreatePerson getCreatePerson() {
    return createPerson;
  }


  public void setCreatePerson(SearchParametersCreatePerson createPerson) {
    this.createPerson = createPerson;
  }


  public SearchRequest groupIds(List<UUID> groupIds) {
    
    this.groupIds = groupIds;
    return this;
  }

  public SearchRequest addGroupIdsItem(UUID groupIdsItem) {
    if (this.groupIds == null) {
      this.groupIds = new ArrayList<UUID>();
    }
    this.groupIds.add(groupIdsItem);
    return this;
  }

   /**
   * IDs of the groups in which the search is performed.
   * @return groupIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IDs of the groups in which the search is performed.")

  public List<UUID> getGroupIds() {
    return groupIds;
  }


  public void setGroupIds(List<UUID> groupIds) {
    this.groupIds = groupIds;
  }


  public SearchRequest tag(String tag) {
    
    this.tag = tag;
    return this;
  }

   /**
   * Session identificator.
   * @return tag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Session identificator.")

  public String getTag() {
    return tag;
  }


  public void setTag(String tag) {
    this.tag = tag;
  }


  public SearchRequest image(ImageFieldsImage image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ImageFieldsImage getImage() {
    return image;
  }


  public void setImage(ImageFieldsImage image) {
    this.image = image;
  }


  public SearchRequest outputImageParams(OutputImageParams outputImageParams) {
    
    this.outputImageParams = outputImageParams;
    return this;
  }

   /**
   * Get outputImageParams
   * @return outputImageParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OutputImageParams getOutputImageParams() {
    return outputImageParams;
  }


  public void setOutputImageParams(OutputImageParams outputImageParams) {
    this.outputImageParams = outputImageParams;
  }


  public SearchRequest detectAll(Boolean detectAll) {
    
    this.detectAll = detectAll;
    return this;
  }

   /**
   * Whether to detect all faces in the image. If set to false, only the most central face is detected.
   * @return detectAll
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to detect all faces in the image. If set to false, only the most central face is detected.")

  public Boolean getDetectAll() {
    return detectAll;
  }


  public void setDetectAll(Boolean detectAll) {
    this.detectAll = detectAll;
  }


  public SearchRequest threshold(Float threshold) {
    
    this.threshold = threshold;
    return this;
  }

   /**
   * The similarity threshold.
   * @return threshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The similarity threshold.")

  public Float getThreshold() {
    return threshold;
  }


  public void setThreshold(Float threshold) {
    this.threshold = threshold;
  }


  public SearchRequest limit(Integer limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * The maximum number of results to be returned.
   * @return limit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of results to be returned.")

  public Integer getLimit() {
    return limit;
  }


  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchRequest searchRequest = (SearchRequest) o;
    return Objects.equals(this.createPerson, searchRequest.createPerson) &&
        Objects.equals(this.groupIds, searchRequest.groupIds) &&
        Objects.equals(this.tag, searchRequest.tag) &&
        Objects.equals(this.image, searchRequest.image) &&
        Objects.equals(this.outputImageParams, searchRequest.outputImageParams) &&
        Objects.equals(this.detectAll, searchRequest.detectAll) &&
        Objects.equals(this.threshold, searchRequest.threshold) &&
        Objects.equals(this.limit, searchRequest.limit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createPerson, groupIds, tag, image, outputImageParams, detectAll, threshold, limit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchRequest {\n");
    sb.append("    createPerson: ").append(toIndentedString(createPerson)).append("\n");
    sb.append("    groupIds: ").append(toIndentedString(groupIds)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    outputImageParams: ").append(toIndentedString(outputImageParams)).append("\n");
    sb.append("    detectAll: ").append(toIndentedString(detectAll)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

