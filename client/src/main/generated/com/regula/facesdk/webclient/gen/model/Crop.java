/*
 * Regula Face SDK Web API
 * <a href=\"https://regulaforensics.com/products/face-recognition-sdk/  \" target=\"_blank\">Regula Face SDK</a> is a cross-platform biometric verification solution for a digital identity verification process and image quality assurance. The SDK enables convenient and reliable face capture on the client side (mobile, web, and desktop) and further processing on the client or server side.   The Face SDK includes the following features:  * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-detection\" target=\"_blank\">Face detection and image quality assessment</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-comparison-11\" target=\"_blank\">Face match (1:1)</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-identification-1n\" target=\"_blank\">Face search (1:N)</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#liveness-assessment\" target=\"_blank\">Liveness detection</a>  Here is the <a href=\"https://github.com/regulaforensics/FaceSDK-web-openapi  \" target=\"_blank\">OpenAPI specification on GitHub</a>.   ### Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 6.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.regula.facesdk.webclient.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.regula.facesdk.webclient.gen.model.FaceImageQualityAlignType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Whether to return a Base64-encoded image of an aligned and cropped portrait in the &#x60;crop&#x60; field. Alignment is performed according to &#x60;type&#x60;; if a head on the original image is tilted, for the returned portrait it is aligned in a straight vertical line. If there are more than one face in the photo, all the faces are detected and processed, and separate portraits for each face are returned. So, if there are five people in the photo, you&#39;ll get five processed portraits. Each portrait can be downloaded.
 */
@ApiModel(description = "Whether to return a Base64-encoded image of an aligned and cropped portrait in the `crop` field. Alignment is performed according to `type`; if a head on the original image is tilted, for the returned portrait it is aligned in a straight vertical line. If there are more than one face in the photo, all the faces are detected and processed, and separate portraits for each face are returned. So, if there are five people in the photo, you'll get five processed portraits. Each portrait can be downloaded.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Crop {
  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private FaceImageQualityAlignType type;

  public static final String SERIALIZED_NAME_PAD_COLOR = "padColor";
  @SerializedName(SERIALIZED_NAME_PAD_COLOR)
  private List<Integer> padColor = null;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private List<Integer> size = null;

  public static final String SERIALIZED_NAME_RETURN_ORIGINAL_RECT = "returnOriginalRect";
  @SerializedName(SERIALIZED_NAME_RETURN_ORIGINAL_RECT)
  private Boolean returnOriginalRect;

  public Crop() { 
  }

  public Crop type(FaceImageQualityAlignType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FaceImageQualityAlignType getType() {
    return type;
  }


  public void setType(FaceImageQualityAlignType type) {
    this.type = type;
  }


  public Crop padColor(List<Integer> padColor) {
    
    this.padColor = padColor;
    return this;
  }

  public Crop addPadColorItem(Integer padColorItem) {
    if (this.padColor == null) {
      this.padColor = new ArrayList<Integer>();
    }
    this.padColor.add(padColorItem);
    return this;
  }

   /**
   * The RGB value of a color for filling background behind a person&#39;s silhouette and for aligning the image.
   * @return padColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[128,128,128]", value = "The RGB value of a color for filling background behind a person's silhouette and for aligning the image.")

  public List<Integer> getPadColor() {
    return padColor;
  }


  public void setPadColor(List<Integer> padColor) {
    this.padColor = padColor;
  }


  public Crop size(List<Integer> size) {
    
    this.size = size;
    return this;
  }

  public Crop addSizeItem(Integer sizeItem) {
    if (this.size == null) {
      this.size = new ArrayList<Integer>();
    }
    this.size.add(sizeItem);
    return this;
  }

   /**
   * The resize value in case &#x60;type&#x60; matches this value. If it doesn&#39;t, no resize is performed.
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[300,400]", value = "The resize value in case `type` matches this value. If it doesn't, no resize is performed.")

  public List<Integer> getSize() {
    return size;
  }


  public void setSize(List<Integer> size) {
    this.size = size;
  }


  public Crop returnOriginalRect(Boolean returnOriginalRect) {
    
    this.returnOriginalRect = returnOriginalRect;
    return this;
  }

   /**
   * Whether to return the coordinates of the rectangle with the face in the original image prepared for the face crop.
   * @return returnOriginalRect
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether to return the coordinates of the rectangle with the face in the original image prepared for the face crop.")

  public Boolean getReturnOriginalRect() {
    return returnOriginalRect;
  }


  public void setReturnOriginalRect(Boolean returnOriginalRect) {
    this.returnOriginalRect = returnOriginalRect;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Crop crop = (Crop) o;
    return Objects.equals(this.type, crop.type) &&
        Objects.equals(this.padColor, crop.padColor) &&
        Objects.equals(this.size, crop.size) &&
        Objects.equals(this.returnOriginalRect, crop.returnOriginalRect);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, padColor, size, returnOriginalRect);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Crop {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    padColor: ").append(toIndentedString(padColor)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    returnOriginalRect: ").append(toIndentedString(returnOriginalRect)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

