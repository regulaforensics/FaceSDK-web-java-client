/*
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 4.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.regula.facesdk.webclient.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.regula.facesdk.webclient.gen.model.MatchImage;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * MatchRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MatchRequest {
  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private String tag;

  public static final String SERIALIZED_NAME_THUMBNAILS = "thumbnails";
  @SerializedName(SERIALIZED_NAME_THUMBNAILS)
  private Boolean thumbnails = false;

  public static final String SERIALIZED_NAME_IMAGES = "images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<MatchImage> images = new ArrayList<MatchImage>();

  public MatchRequest() { 
  }

  public MatchRequest tag(String tag) {
    
    this.tag = tag;
    return this;
  }

   /**
   * Session identificator.
   * @return tag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Session identificator.")

  public String getTag() {
    return tag;
  }


  public void setTag(String tag) {
    this.tag = tag;
  }


  public MatchRequest thumbnails(Boolean thumbnails) {
    
    this.thumbnails = thumbnails;
    return this;
  }

   /**
   * Whether to return cropped portraits of the detected people.
   * @return thumbnails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to return cropped portraits of the detected people.")

  public Boolean getThumbnails() {
    return thumbnails;
  }


  public void setThumbnails(Boolean thumbnails) {
    this.thumbnails = thumbnails;
  }


  public MatchRequest images(List<MatchImage> images) {
    
    this.images = images;
    return this;
  }

  public MatchRequest addImagesItem(MatchImage imagesItem) {
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Base64 images.
   * @return images
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Base64 images.")

  public List<MatchImage> getImages() {
    return images;
  }


  public void setImages(List<MatchImage> images) {
    this.images = images;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchRequest matchRequest = (MatchRequest) o;
    return Objects.equals(this.tag, matchRequest.tag) &&
        Objects.equals(this.thumbnails, matchRequest.thumbnails) &&
        Objects.equals(this.images, matchRequest.images);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tag, thumbnails, images);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchRequest {\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    thumbnails: ").append(toIndentedString(thumbnails)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

