/*
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 4.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.regula.facesdk.webclient.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.regula.facesdk.webclient.gen.model.FaceSDKResultCode;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * MatchImageResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MatchImageResult {
  public static final String SERIALIZED_NAME_FIRST_INDEX = "firstIndex";
  @SerializedName(SERIALIZED_NAME_FIRST_INDEX)
  private Integer firstIndex;

  public static final String SERIALIZED_NAME_FIRST_FACE_INDEX = "firstFaceIndex";
  @SerializedName(SERIALIZED_NAME_FIRST_FACE_INDEX)
  private BigDecimal firstFaceIndex;

  public static final String SERIALIZED_NAME_SECOND_INDEX = "secondIndex";
  @SerializedName(SERIALIZED_NAME_SECOND_INDEX)
  private Integer secondIndex;

  public static final String SERIALIZED_NAME_SECOND_FACE_INDEX = "secondFaceIndex";
  @SerializedName(SERIALIZED_NAME_SECOND_FACE_INDEX)
  private BigDecimal secondFaceIndex;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private BigDecimal score;

  public static final String SERIALIZED_NAME_SIMILARITY = "similarity";
  @SerializedName(SERIALIZED_NAME_SIMILARITY)
  private BigDecimal similarity;

  public static final String SERIALIZED_NAME_ERROR_CODE = "errorCode";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private FaceSDKResultCode errorCode;

  public static final String SERIALIZED_NAME_ERROR_MSG = "errorMsg";
  @SerializedName(SERIALIZED_NAME_ERROR_MSG)
  private String errorMsg;

  public MatchImageResult() { 
  }

  public MatchImageResult firstIndex(Integer firstIndex) {
    
    this.firstIndex = firstIndex;
    return this;
  }

   /**
   * Image index used to identify input photos between themselves. If not specified, than input list index is used.
   * @return firstIndex
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Image index used to identify input photos between themselves. If not specified, than input list index is used.")

  public Integer getFirstIndex() {
    return firstIndex;
  }


  public void setFirstIndex(Integer firstIndex) {
    this.firstIndex = firstIndex;
  }


  public MatchImageResult firstFaceIndex(BigDecimal firstFaceIndex) {
    
    this.firstFaceIndex = firstFaceIndex;
    return this;
  }

   /**
   * Faces index used to identify faces in scope of one photo.
   * @return firstFaceIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Faces index used to identify faces in scope of one photo.")

  public BigDecimal getFirstFaceIndex() {
    return firstFaceIndex;
  }


  public void setFirstFaceIndex(BigDecimal firstFaceIndex) {
    this.firstFaceIndex = firstFaceIndex;
  }


  public MatchImageResult secondIndex(Integer secondIndex) {
    
    this.secondIndex = secondIndex;
    return this;
  }

   /**
   * Image index used to identify input photos between themselves. If not specified, than input list index is used.
   * @return secondIndex
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Image index used to identify input photos between themselves. If not specified, than input list index is used.")

  public Integer getSecondIndex() {
    return secondIndex;
  }


  public void setSecondIndex(Integer secondIndex) {
    this.secondIndex = secondIndex;
  }


  public MatchImageResult secondFaceIndex(BigDecimal secondFaceIndex) {
    
    this.secondFaceIndex = secondFaceIndex;
    return this;
  }

   /**
   * Faces index used to identify faces in scope of one photo.
   * @return secondFaceIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Faces index used to identify faces in scope of one photo.")

  public BigDecimal getSecondFaceIndex() {
    return secondFaceIndex;
  }


  public void setSecondFaceIndex(BigDecimal secondFaceIndex) {
    this.secondFaceIndex = secondFaceIndex;
  }


  public MatchImageResult score(BigDecimal score) {
    
    this.score = score;
    return this;
  }

   /**
   * The matching score.
   * @return score
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The matching score.")

  public BigDecimal getScore() {
    return score;
  }


  public void setScore(BigDecimal score) {
    this.score = score;
  }


  public MatchImageResult similarity(BigDecimal similarity) {
    
    this.similarity = similarity;
    return this;
  }

   /**
   * The similarity score.
   * @return similarity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The similarity score.")

  public BigDecimal getSimilarity() {
    return similarity;
  }


  public void setSimilarity(BigDecimal similarity) {
    this.similarity = similarity;
  }


  public MatchImageResult errorCode(FaceSDKResultCode errorCode) {
    
    this.errorCode = errorCode;
    return this;
  }

   /**
   * Get errorCode
   * @return errorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FaceSDKResultCode getErrorCode() {
    return errorCode;
  }


  public void setErrorCode(FaceSDKResultCode errorCode) {
    this.errorCode = errorCode;
  }


  public MatchImageResult errorMsg(String errorMsg) {
    
    this.errorMsg = errorMsg;
    return this;
  }

   /**
   * The error message if any.
   * @return errorMsg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The error message if any.")

  public String getErrorMsg() {
    return errorMsg;
  }


  public void setErrorMsg(String errorMsg) {
    this.errorMsg = errorMsg;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchImageResult matchImageResult = (MatchImageResult) o;
    return Objects.equals(this.firstIndex, matchImageResult.firstIndex) &&
        Objects.equals(this.firstFaceIndex, matchImageResult.firstFaceIndex) &&
        Objects.equals(this.secondIndex, matchImageResult.secondIndex) &&
        Objects.equals(this.secondFaceIndex, matchImageResult.secondFaceIndex) &&
        Objects.equals(this.score, matchImageResult.score) &&
        Objects.equals(this.similarity, matchImageResult.similarity) &&
        Objects.equals(this.errorCode, matchImageResult.errorCode) &&
        Objects.equals(this.errorMsg, matchImageResult.errorMsg);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstIndex, firstFaceIndex, secondIndex, secondFaceIndex, score, similarity, errorCode, errorMsg);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchImageResult {\n");
    sb.append("    firstIndex: ").append(toIndentedString(firstIndex)).append("\n");
    sb.append("    firstFaceIndex: ").append(toIndentedString(firstFaceIndex)).append("\n");
    sb.append("    secondIndex: ").append(toIndentedString(secondIndex)).append("\n");
    sb.append("    secondFaceIndex: ").append(toIndentedString(secondFaceIndex)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    similarity: ").append(toIndentedString(similarity)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMsg: ").append(toIndentedString(errorMsg)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

