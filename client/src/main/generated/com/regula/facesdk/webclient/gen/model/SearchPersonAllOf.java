/*
 * Regula Face SDK Web API
 * <a href=\"https://regulaforensics.com/products/face-recognition-sdk/  \" target=\"_blank\">Regula Face SDK</a> is a cross-platform biometric verification solution for a digital identity verification process and image quality assurance. The SDK enables convenient and reliable face capture on the client side (mobile, web, and desktop) and further processing on the client or server side.   The Face SDK includes the following features:  * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-detection\" target=\"_blank\">Face detection and image quality assessment</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-comparison-11\" target=\"_blank\">Face match (1:1)</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-identification-1n\" target=\"_blank\">Face search (1:N)</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#liveness-assessment\" target=\"_blank\">Liveness detection</a>  Here is the <a href=\"https://github.com/regulaforensics/FaceSDK-web-openapi  \" target=\"_blank\">OpenAPI specification on GitHub</a>.   ### Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 6.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.regula.facesdk.webclient.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.regula.facesdk.webclient.gen.model.RecognizeImage;
import com.regula.facesdk.webclient.gen.model.SearchDetection;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Person data.
 */
@ApiModel(description = "Person data.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SearchPersonAllOf {
  public static final String SERIALIZED_NAME_DETECTION = "detection";
  @SerializedName(SERIALIZED_NAME_DETECTION)
  private SearchDetection detection;

  public static final String SERIALIZED_NAME_IMAGES = "images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<RecognizeImage> images = null;

  public SearchPersonAllOf() { 
  }

  public SearchPersonAllOf detection(SearchDetection detection) {
    
    this.detection = detection;
    return this;
  }

   /**
   * Get detection
   * @return detection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SearchDetection getDetection() {
    return detection;
  }


  public void setDetection(SearchDetection detection) {
    this.detection = detection;
  }


  public SearchPersonAllOf images(List<RecognizeImage> images) {
    
    this.images = images;
    return this;
  }

  public SearchPersonAllOf addImagesItem(RecognizeImage imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<RecognizeImage>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Array of Person images.
   * @return images
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of Person images.")

  public List<RecognizeImage> getImages() {
    return images;
  }


  public void setImages(List<RecognizeImage> images) {
    this.images = images;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchPersonAllOf searchPersonAllOf = (SearchPersonAllOf) o;
    return Objects.equals(this.detection, searchPersonAllOf.detection) &&
        Objects.equals(this.images, searchPersonAllOf.images);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detection, images);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchPersonAllOf {\n");
    sb.append("    detection: ").append(toIndentedString(detection)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

