/*
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API
 *
 * The version of the OpenAPI document: 3.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.regula.facesdk.webclient.gen.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/** ProcessParam */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ProcessParam {
  public static final String SERIALIZED_NAME_SCENARIO = "scenario";

  @SerializedName(SERIALIZED_NAME_SCENARIO)
  private FaceQualityScenarios scenario;

  public static final String SERIALIZED_NAME_ONLY_CENTRAL_FACE = "onlyCentralFace";

  @SerializedName(SERIALIZED_NAME_ONLY_CENTRAL_FACE)
  private Boolean onlyCentralFace;

  public static final String SERIALIZED_NAME_OUTPUT_IMAGE_PARAMS = "outputImageParams";

  @SerializedName(SERIALIZED_NAME_OUTPUT_IMAGE_PARAMS)
  private OutputImageParams outputImageParams;

  public static final String SERIALIZED_NAME_QUALITY = "quality";

  @SerializedName(SERIALIZED_NAME_QUALITY)
  private QualityRequest quality;

  public ProcessParam scenario(FaceQualityScenarios scenario) {

    this.scenario = scenario;
    return this;
  }

  /**
   * Get scenario
   *
   * @return scenario
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  public FaceQualityScenarios getScenario() {
    return scenario;
  }

  public void setScenario(FaceQualityScenarios scenario) {
    this.scenario = scenario;
  }

  public ProcessParam onlyCentralFace(Boolean onlyCentralFace) {

    this.onlyCentralFace = onlyCentralFace;
    return this;
  }

  /**
   * Get onlyCentralFace
   *
   * @return onlyCentralFace
   */
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")
  public Boolean getOnlyCentralFace() {
    return onlyCentralFace;
  }

  public void setOnlyCentralFace(Boolean onlyCentralFace) {
    this.onlyCentralFace = onlyCentralFace;
  }

  public ProcessParam outputImageParams(OutputImageParams outputImageParams) {

    this.outputImageParams = outputImageParams;
    return this;
  }

  /**
   * Get outputImageParams
   *
   * @return outputImageParams
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  public OutputImageParams getOutputImageParams() {
    return outputImageParams;
  }

  public void setOutputImageParams(OutputImageParams outputImageParams) {
    this.outputImageParams = outputImageParams;
  }

  public ProcessParam quality(QualityRequest quality) {

    this.quality = quality;
    return this;
  }

  /**
   * Get quality
   *
   * @return quality
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  public QualityRequest getQuality() {
    return quality;
  }

  public void setQuality(QualityRequest quality) {
    this.quality = quality;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessParam processParam = (ProcessParam) o;
    return Objects.equals(this.scenario, processParam.scenario)
        && Objects.equals(this.onlyCentralFace, processParam.onlyCentralFace)
        && Objects.equals(this.outputImageParams, processParam.outputImageParams)
        && Objects.equals(this.quality, processParam.quality);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scenario, onlyCentralFace, outputImageParams, quality);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessParam {\n");
    sb.append("    scenario: ").append(toIndentedString(scenario)).append("\n");
    sb.append("    onlyCentralFace: ").append(toIndentedString(onlyCentralFace)).append("\n");
    sb.append("    outputImageParams: ").append(toIndentedString(outputImageParams)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
