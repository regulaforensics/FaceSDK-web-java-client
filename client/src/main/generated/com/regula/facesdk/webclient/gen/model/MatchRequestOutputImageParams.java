/*
 * Regula Face SDK Web API
 * <a href=\"https://regulaforensics.com/products/face-recognition-sdk/  \" target=\"_blank\">Regula Face SDK</a> is a cross-platform biometric verification solution for a digital identity verification process. The SDK enables convenient and reliable face capture on the client side (mobile, web, and desktop) and further processing on the client or server side.  The Face SDK includes the following features:  * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-detection\" target=\"_blank\">Face Detection</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-comparison-11\" target=\"_blank\">Face Match (1:1)</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-identification-1n\" target=\"_blank\">Face Search (1:N)</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#liveness-assessment\" target=\"_blank\">Liveness Assessment</a>  Here is the <a href=\"https://github.com/regulaforensics/FaceSDK-web-openapi  \" target=\"_blank\">OpenAPI specification on GitHub</a>.   ### Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 6.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.regula.facesdk.webclient.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.regula.facesdk.webclient.gen.model.MatchRequestOutputImageParamsCrop;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Whether to process the uploaded image according to the indicated settings.
 */
@ApiModel(description = "Whether to process the uploaded image according to the indicated settings.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MatchRequestOutputImageParams {
  public static final String SERIALIZED_NAME_BACKGROUND_COLOR = "backgroundColor";
  @SerializedName(SERIALIZED_NAME_BACKGROUND_COLOR)
  private List<Integer> backgroundColor = null;

  public static final String SERIALIZED_NAME_CROP = "crop";
  @SerializedName(SERIALIZED_NAME_CROP)
  private MatchRequestOutputImageParamsCrop crop;

  public MatchRequestOutputImageParams() { 
  }

  public MatchRequestOutputImageParams backgroundColor(List<Integer> backgroundColor) {
    
    this.backgroundColor = backgroundColor;
    return this;
  }

  public MatchRequestOutputImageParams addBackgroundColorItem(Integer backgroundColorItem) {
    if (this.backgroundColor == null) {
      this.backgroundColor = new ArrayList<Integer>();
    }
    this.backgroundColor.add(backgroundColorItem);
    return this;
  }

   /**
   * The RGB value of a color for filling background behind a person&#39;s silhouette and for aligning the image.
   * @return backgroundColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The RGB value of a color for filling background behind a person's silhouette and for aligning the image.")

  public List<Integer> getBackgroundColor() {
    return backgroundColor;
  }


  public void setBackgroundColor(List<Integer> backgroundColor) {
    this.backgroundColor = backgroundColor;
  }


  public MatchRequestOutputImageParams crop(MatchRequestOutputImageParamsCrop crop) {
    
    this.crop = crop;
    return this;
  }

   /**
   * Get crop
   * @return crop
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MatchRequestOutputImageParamsCrop getCrop() {
    return crop;
  }


  public void setCrop(MatchRequestOutputImageParamsCrop crop) {
    this.crop = crop;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchRequestOutputImageParams matchRequestOutputImageParams = (MatchRequestOutputImageParams) o;
    return Objects.equals(this.backgroundColor, matchRequestOutputImageParams.backgroundColor) &&
        Objects.equals(this.crop, matchRequestOutputImageParams.crop);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backgroundColor, crop);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchRequestOutputImageParams {\n");
    sb.append("    backgroundColor: ").append(toIndentedString(backgroundColor)).append("\n");
    sb.append("    crop: ").append(toIndentedString(crop)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

