/*
 * Regula Face SDK Web API
 * <a href=\"https://regulaforensics.com/products/face-recognition-sdk/  \" target=\"_blank\">Regula Face SDK</a> is a cross-platform biometric verification solution for a digital identity verification process and image quality assurance. The SDK enables convenient and reliable face capture on the client side (mobile, web, and desktop) and further processing on the client or server side.   The Face SDK includes the following features:  * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-detection\" target=\"_blank\">Face detection and image quality assessment</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-comparison-11\" target=\"_blank\">Face match (1:1)</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#face-identification-1n\" target=\"_blank\">Face search (1:N)</a> * <a href=\"https://docs.regulaforensics.com/develop/face-sdk/overview/introduction/#liveness-assessment\" target=\"_blank\">Liveness detection</a>  Here is the <a href=\"https://github.com/regulaforensics/FaceSDK-web-openapi  \" target=\"_blank\">OpenAPI specification on GitHub</a>.   ### Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 6.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.regula.facesdk.webclient.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.regula.facesdk.webclient.gen.model.QualityConfig;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * If set, the face image quality check is performed according to the set scenario or characteristics.
 */
@ApiModel(description = "If set, the face image quality check is performed according to the set scenario or characteristics.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class QualityRequest {
  public static final String SERIALIZED_NAME_BACKGROUND_MATCH_COLOR = "backgroundMatchColor";
  @SerializedName(SERIALIZED_NAME_BACKGROUND_MATCH_COLOR)
  private List<Integer> backgroundMatchColor = null;

  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private List<QualityConfig> config = null;

  public QualityRequest() { 
  }

  public QualityRequest backgroundMatchColor(List<Integer> backgroundMatchColor) {
    
    this.backgroundMatchColor = backgroundMatchColor;
    return this;
  }

  public QualityRequest addBackgroundMatchColorItem(Integer backgroundMatchColorItem) {
    if (this.backgroundMatchColor == null) {
      this.backgroundMatchColor = new ArrayList<Integer>();
    }
    this.backgroundMatchColor.add(backgroundMatchColorItem);
    return this;
  }

   /**
   * The RGB value of a color for filling background behind a person&#39;s silhouette and for aligning the image.
   * @return backgroundMatchColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[128,128,128]", value = "The RGB value of a color for filling background behind a person's silhouette and for aligning the image.")

  public List<Integer> getBackgroundMatchColor() {
    return backgroundMatchColor;
  }


  public void setBackgroundMatchColor(List<Integer> backgroundMatchColor) {
    this.backgroundMatchColor = backgroundMatchColor;
  }


  public QualityRequest config(List<QualityConfig> config) {
    
    this.config = config;
    return this;
  }

  public QualityRequest addConfigItem(QualityConfig configItem) {
    if (this.config == null) {
      this.config = new ArrayList<QualityConfig>();
    }
    this.config.add(configItem);
    return this;
  }

   /**
   * The list of quality check characteristics.
   * @return config
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of quality check characteristics.")

  public List<QualityConfig> getConfig() {
    return config;
  }


  public void setConfig(List<QualityConfig> config) {
    this.config = config;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QualityRequest qualityRequest = (QualityRequest) o;
    return Objects.equals(this.backgroundMatchColor, qualityRequest.backgroundMatchColor) &&
        Objects.equals(this.config, qualityRequest.config);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backgroundMatchColor, config);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QualityRequest {\n");
    sb.append("    backgroundMatchColor: ").append(toIndentedString(backgroundMatchColor)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

